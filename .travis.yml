language: generic
sudo: false
cache: apt

before_script:
  # Install lcov 1.13
  - wget -O lcov-1.13.tar.gz https://github.com/linux-test-project/lcov/releases/download/v1.13/lcov-1.13.tar.gz
  - tar xzf lcov-1.13.tar.gz
  - cd lcov-1.13 && sudo make install
  - cd ..

matrix:
  include:
    - env: LANGUAGE=C++ CXX=g++-5 CC=gcc-5 GCOV=gcov-5
      addons:
        apt:
          packages:
            - g++-5
            - libboost-all-dev
            - libleveldb-dev
            - libjsoncpp-dev
            - libsnappy-dev
          sources: &sources
            - r-packages-trusty
            - llvm-toolchain-trusty
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
      script:
        - cmake -DCMAKE_BUILD_TYPE=Debug -DGCC_COVERAGE_COMPILE_FLAGS='-g -O0 -fprofile-arcs -ftest-coverage' .
        - make -j4
        - ctest
        - make -j4 nuQoin_coverage
      after_success:
        - cd ${TRAVIS_BUILD_DIR}
        - lcov --gcov-tool gcov-5 --directory . --capture --output-file coverage.info
        - lcov --gcov-tool gcov-5 --remove coverage.info '/usr/*' --output-file coverage.info
        - lcov --gcov-tool gcov-5 --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -g '/usr/**' -x gcov-5 || echo "Codecov did not collect coverage reports"
    - env: LANGUAGE=C++ CXX=g++-5 CC=gcc-5
      addons:
        apt:
          packages:
            - g++-5
            - libboost-all-dev
            - libleveldb-dev
            - libjsoncpp-dev
            - libsnappy-dev
          sources: &sources
            - r-packages-trusty
            - llvm-toolchain-trusty
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-5.0
      script:
        - ./build_lookup.sh
        - ctest
