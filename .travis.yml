language: generic
cache:
  directories:
    - $HOME/.ccache/

# multiplied by platform
os:
  - osx
  - linux

# multiplied by BUILD_COMMAND
env:
  global:
    - HOMEBREW_NO_AUTO_UPDATE=1
  matrix:
    - BUILD_COMMAND=./build.sh
    - BUILD_COMMAND=./build_lookup.sh

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      docker pull ubuntu:16.04;
      docker run -d -v $(pwd):/zilliqa -v $HOME/.ccache:/root/.ccache -w /zilliqa --name ci ubuntu:16.04 tail -f /dev/null;
    fi

install:
  # note: use option '-t' for 'docker exec' to enable colored output
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      docker exec -t ci /bin/sh -c "
        apt-get -qq update;
        apt-get install -y cmake build-essential pkg-config libssl-dev;
        apt-get install -y libboost-all-dev libleveldb-dev libsnappy-dev;
        apt-get install -y libjsoncpp-dev libmicrohttpd-dev libjsonrpccpp-dev;
        apt-get install -y ccache;
        apt-get install -y clang-format-5.0 clang-tidy-5.0 clang-5.0;
      ";
    else
      brew install pkg-config jsoncpp leveldb libjson-rpc-cpp ccache;
      brew install llvm@5;
    fi

script:
  # build
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      docker exec -t ci /bin/sh -c "$BUILD_COMMAND";
    else
      $BUILD_COMMAND;
    fi
  # check format
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      docker exec -t ci /bin/sh -c "make clang-format";
    else
      make clang-format;
    fi
  # run tests
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      docker exec -t ci /bin/sh -c "ctest";
    else
      ctest;
    fi
