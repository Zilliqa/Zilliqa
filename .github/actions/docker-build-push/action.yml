name: 'Docker build and push'
description: 'Simple Docker build and push action'
author: devops@zilliqa.com

inputs:
  file:
    description: 'The path to the Dockerfile'
    required: true
  context:
    description: 'The context to build the Dockerfile'
    required: true
  image-name:
    description: 'The name of the image'
    required: true
  image-tag:
    description: 'The tag of the image'
    required: false
    default: ''
  push:
    description: 'Enable/disable image push'
    required: false
    default: true
  target:
    description: 'The target to build in the image'
    required: false
    default: ''
  build-args:
    description: 'Arguments to build the image'
    required: false
  registry:
    description: 'Docker registry'
    required: true
  registry-username:
    description: 'The username to access the registry'
    required: true
  registry-password:
    description: 'The password to access the registry'
    required: true
outputs:
  image-tag:
    description: "Tag given to the image"
    value: ${{ steps.set-tag.outputs.tag }}

runs:
  using: "composite"
  steps:
    - name: Login to the registry
      uses: docker/login-action@v2
      if: ${{ contains(inputs.registry, '.amazonaws.com') || ( inputs.registry-username != '' && inputs.registry-password != '' ) }}
      with:
        registry: ${{ inputs.registry }}
        username: ${{ inputs.registry-username }}
        password: ${{ inputs.registry-password }}
    - name: Get image tag from git commit
      id: set-tag
      run: |
        if [ "${{ inputs.image-tag }}" = "" ]; then
          echo "tag=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
        else
          echo "tag=${{ inputs.image-tag }}" >> $GITHUB_OUTPUT
        fi
      shell: bash
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Context for Buildx
      shell: bash
      id: buildx-context
      run: |
        docker context create buildx-context || true 
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        endpoint: buildx-context
    - name: Build and push Docker images
      uses: docker/build-push-action@v3
      with:
        file: ${{ inputs.file }}
        context: ${{ inputs.context }}
        build-args: ${{ inputs.build-args }}
        pull: true
        push: ${{ inputs.push }}
        target: ${{ inputs.target }}
        tags: ${{ inputs.image-name }}:${{ steps.set-tag.outputs.tag }}
        cache-from: |
          ${{ env.CACHE_FROM_CURRENT_BRANCH }}
          ${{ env.CACHE_FROM_DEFAULT_BRANCH }}
        cache-to: |
          ${{ env.CACHE_TO }}