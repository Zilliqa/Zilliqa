# Copyright (C) 2022 Zilliqa
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#

# start from a new ubuntu environment as builder for zilliqa, make sure the deps is consistent with those in the runner image
FROM ubuntu:20.04

# Format guideline: one package per line and keep them alphabetically sorted
RUN apt-get update \
    && apt-get install -y software-properties-common \
    && apt-get update && apt-get install -y --no-install-recommends \
    autoconf \
    bison \
    build-essential \
    ca-certificates \
    ccache \
    clang \
    clang-format-7 \
    clang-tidy \
    cron \
    curl \
    dnsutils \
    gawk \
    gdb \
    git \
    golang \
    lcov \
    libcurl4-openssl-dev \
    libjsonrpccpp-dev \
    libsecp256k1-dev \
    libssl-dev \
    libtool \
    libxml2-utils \
    logrotate \
    net-tools \
    ninja-build \
    ocl-icd-opencl-dev \
    openssh-client \
    pkg-config \
    python3-dev \
    python3-pip \
    rsync \
    rsyslog \
    tar \
    trickle \
    unzip \
    vim \
    wget \
    zip


# Cargo
RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs -o install_script.sh && \
    sh install_script.sh -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Install cmake 3.24
ARG CMAKE_VERSION=3.24.2
RUN wget https://github.com/Kitware/CMake/releases/download/v${CMAKE_VERSION}/cmake-${CMAKE_VERSION}-Linux-x86_64.sh \
    && echo "739d372726cb23129d57a539ce1432453448816e345e1545f6127296926b6754 cmake-${CMAKE_VERSION}-Linux-x86_64.sh" | sha256sum -c \ 
    && mkdir -p "${HOME}"/.local \
    && bash ./cmake-${CMAKE_VERSION}-Linux-x86_64.sh --skip-license --prefix="${HOME}"/.local/

# Include path to refer to latest version of cmake
ENV PATH="/root/.local/bin:${PATH}"

RUN cmake --version \
    && rm cmake-${CMAKE_VERSION}-Linux-x86_64.sh

# Remove the system-wide cmake if there is one as it could collide with the above
# CMake and find the wrong libraries.
RUN apt-get remove -y cmake && apt-get autoremove -y

# This tag must be equivalent to the hash specified by "builtin-baseline" in vcpkg.json
# in the Zilliqa repository.
ARG VCPKG_COMMIT_OR_TAG=2022.09.27
ARG VCPKG_ROOT=/vcpkg

# Clone vcpkg
RUN git clone https://github.com/microsoft/vcpkg ${VCPKG_ROOT}
RUN git -C ${VCPKG_ROOT} checkout ${VCPKG_COMMIT_OR_TAG}

# Setup ccache
RUN ln -s "$(which ccache)" /usr/local/bin/gcc \
  && ln -s "$(which ccache)" /usr/local/bin/g++ \
  && ln -s "$(which ccache)" /usr/local/bin/cc \
  && ln -s "$(which ccache)" /usr/local/bin/c++

RUN ${VCPKG_ROOT}/bootstrap-vcpkg.sh

# Manually input tag or commit, can be overwritten by docker build-args
ARG COMMIT_OR_TAG=master
ARG REPO=https://github.com/Zilliqa/Zilliqa.git
ARG SOURCE_DIR=/zilliqa
ARG BUILD_TRIPLET=x64-linux-dynamic
ARG EXTRA_CMAKE_ARGS=

# If COMMIT_OR_TAG is a branch name or a tag, clone a shallow copy which is
# faster; if this fails, just clone the full repo and checkout the commit.
RUN git clone -b ${COMMIT_OR_TAG} --depth 1 ${REPO} ${SOURCE_DIR} \
  || git clone ${REPO} ${SOURCE_DIR}
RUN git -C ${SOURCE_DIR} checkout ${COMMIT_OR_TAG}
WORKDIR ${SOURCE_DIR}
RUN ${VCPKG_ROOT}/vcpkg install --triplet=${BUILD_TRIPLET}
WORKDIR /
RUN rm -rf ${SOURCE_DIR}
