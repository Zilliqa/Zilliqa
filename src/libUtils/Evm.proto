syntax = "proto3";

package evm;

message UInt128 {
  uint64 x0 = 1;
  uint64 x1 = 2;
}

message UInt256 {
  uint64 x0 = 1;
  uint64 x1 = 2;
  uint64 x2 = 3;
  uint64 x3 = 4;
}

message Address {
  fixed32 x0 = 1;
  fixed64 x1 = 2;
  fixed64 x2 = 3;
}

message H256 {
  fixed64 x0 = 1;
  fixed64 x1 = 2;
  fixed64 x2 = 3;
  fixed64 x3 = 4;
}

message EvmEvalExtras {
  uint32 chain_id = 1;
  uint64 block_timestamp = 2;
  uint64 block_gas_limit = 3;
  uint64 block_difficulty = 4;
  uint64 block_number = 5;
  UInt256 gas_price = 6;
}

message Storage {
  bytes key = 1;
  bytes value = 2;
}

message Apply {
  message Delete {
    Address address = 1;
  }
  message Modify {
    Address address = 1;
    UInt256 balance = 2;
    UInt256 nonce = 3;
    bytes code = 4;
    repeated Storage storage = 5;
    bool reset_storage = 6;
  }
  oneof apply {
    Modify modify = 1;
    Delete delete = 2;
  }
}

message Continuation {
  enum Type {
    CALL = 0;
    CREATE = 1;
  }

  message Call {
    bytes data = 1;
    UInt256 memory_offset = 2;
    UInt256 offset_len = 3;
  }

  uint64 id = 1;
  Type feedback_type = 2;
  oneof feedback_data {
    Address address = 3;
    Call calldata = 4;
  }
}

message EvmArgs {
  Address address = 1;
  Address origin = 2;
  bytes code = 3;
  bytes data = 4;
  UInt256 apparent_value = 5;
  uint64 gas_limit = 6;
  EvmEvalExtras extras = 7;
  bool estimate = 8;
  string context = 9;
  Continuation continuation = 10;
  bool enable_cps = 11;
  bool tx_trace_enabled = 12;
  string tx_trace = 13;
}

message EvmLog {
  Address address = 1;
  repeated H256 topics = 2;
  bytes data = 3;
}

message ExitReason {
  enum Succeed {
    STOPPED = 0;
    RETURNED = 1;
    SUICIDED = 2;
  }

  message Error {
    enum Kind {
      STACK_UNDERFLOW = 0;
      STACK_OVERFLOW = 1;
      INVALID_JUMP = 2;
      INVALID_RANGE = 3 ;
      DESIGNATED_INVALID = 4;
      CALL_TOO_DEEP = 5;
      CREATE_COLLISION = 6;
      CREATE_CONTRACT_LIMIT = 7;
      INVALID_CODE = 8;
      OUT_OF_OFFSET = 9;
      OUT_OF_GAS = 10;
      OUT_OF_FUND = 11;
      PC_UNDERFLOW = 12;
      CREATE_EMPTY = 13;
      OTHER = 14;
    }

    Kind kind = 1;
    string error_string = 2;
  }

  enum Revert {
    REVERTED = 0;
  }

  message Fatal {
    enum Kind {
      NOT_SUPPORTED = 0;
      UNHANDLED_INTERRUPT = 1;
      CALL_ERROR_AS_FATAL = 2;
      OTHER = 3;
    }
    Kind kind = 1;
    Error error = 2;  // set when kind == CALL_ERROR_AS_FATAL
    string error_string = 3;
  }

  message Trap {
    enum Kind {
      UNKNOWN = 0;
      CALL = 1;
      CREATE = 2;
    }

    Kind kind = 1;
  }

  oneof exit_reason {
    Succeed succeed = 1;
    Error error = 2;
    Revert revert = 3;
    Fatal fatal = 4;
    Trap trap = 5;
  }
}

message TrapData {
  
  message Transfer {
    Address source = 1;
    Address destination = 2;
    UInt256 value = 3;
  }

  message Context {
    Address destination = 1;
    Address caller = 2;
    UInt256 apparent_value = 3;
  }

  message Scheme {
    message Legacy {
      Address caller = 1;
    }
    message Create2 {
      Address caller = 1;
      H256 code_hash = 2;
      H256 salt = 3;
      Address create2_address = 4;
    }
    message Fixed {
      Address addres = 1;
    }

    oneof type {
      Legacy legacy = 1;
      Create2 create2 = 2;
      Fixed fixed = 3;
    }
  }

  message Call {
    Address callee_address = 1;
    Transfer transfer = 2;
    bytes call_data = 3;
    uint64 target_gas = 4;
    bool is_static = 5;
    Context context = 6;
    UInt256 memory_offset = 7;
    UInt256 offset_len = 8;
  }

  message Create {
    Address caller = 1;
    Scheme scheme = 2;
    UInt256 value = 3;
    bytes call_data = 4;
    uint64 target_gas = 5;
  }

  oneof data {
    Call call = 1;
    Create create = 2;
  }
}

message EvmResult {
  ExitReason exit_reason = 1;
  bytes return_value = 2;
  repeated Apply apply = 3;
  repeated EvmLog logs = 4;
  string tx_trace = 5;
  uint64 remaining_gas = 6;
  uint64 continuation_id = 7;
  TrapData trap_data = 8;
}

