// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PoW1.proto

#include "PoW1.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace ProtoMsg {
class PoW1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PoW1>
      _instance;
} _PoW1_default_instance_;
}  // namespace ProtoMsg
namespace protobuf_PoW1_2eproto {
static void InitDefaultsPoW1() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMsg::_PoW1_default_instance_;
    new (ptr) ::ProtoMsg::PoW1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ProtoMsg::PoW1::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_PoW1 =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPoW1}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PoW1.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, block_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, listening_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, pub_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, result_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, mixhash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ProtoMsg::PoW1, signature_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtoMsg::PoW1)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ProtoMsg::_PoW1_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "PoW1.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\nPoW1.proto\022\010ProtoMsg\"\215\001\n\004PoW1\022\024\n\014block"
      "_number\030\001 \001(\014\022\026\n\016listening_port\030\002 \001(\r\022\017\n"
      "\007pub_key\030\003 \001(\014\022\r\n\005nonce\030\004 \001(\004\022\023\n\013result_"
      "hash\030\005 \001(\014\022\017\n\007mixhash\030\006 \001(\014\022\021\n\tsignature"
      "\030\007 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 174);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "PoW1.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_PoW1_2eproto
namespace ProtoMsg {

// ===================================================================

void PoW1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PoW1::kBlockNumberFieldNumber;
const int PoW1::kListeningPortFieldNumber;
const int PoW1::kPubKeyFieldNumber;
const int PoW1::kNonceFieldNumber;
const int PoW1::kResultHashFieldNumber;
const int PoW1::kMixhashFieldNumber;
const int PoW1::kSignatureFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PoW1::PoW1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_PoW1_2eproto::scc_info_PoW1.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ProtoMsg.PoW1)
}
PoW1::PoW1(const PoW1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  block_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.block_number().size() > 0) {
    block_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_number_);
  }
  pub_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.pub_key().size() > 0) {
    pub_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_key_);
  }
  result_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.result_hash().size() > 0) {
    result_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_hash_);
  }
  mixhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.mixhash().size() > 0) {
    mixhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixhash_);
  }
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.signature().size() > 0) {
    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&listening_port_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(listening_port_));
  // @@protoc_insertion_point(copy_constructor:ProtoMsg.PoW1)
}

void PoW1::SharedCtor() {
  block_number_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_key_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixhash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listening_port_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(listening_port_));
}

PoW1::~PoW1() {
  // @@protoc_insertion_point(destructor:ProtoMsg.PoW1)
  SharedDtor();
}

void PoW1::SharedDtor() {
  block_number_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_key_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixhash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PoW1::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PoW1::descriptor() {
  ::protobuf_PoW1_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PoW1_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PoW1& PoW1::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_PoW1_2eproto::scc_info_PoW1.base);
  return *internal_default_instance();
}


void PoW1::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMsg.PoW1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pub_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  mixhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&listening_port_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(listening_port_));
  _internal_metadata_.Clear();
}

bool PoW1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ProtoMsg.PoW1)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes block_number = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_block_number()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 listening_port = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &listening_port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes pub_key = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_pub_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes result_hash = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_result_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes mixhash = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_mixhash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes signature = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_signature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ProtoMsg.PoW1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ProtoMsg.PoW1)
  return false;
#undef DO_
}

void PoW1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ProtoMsg.PoW1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes block_number = 1;
  if (this->block_number().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->block_number(), output);
  }

  // uint32 listening_port = 2;
  if (this->listening_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->listening_port(), output);
  }

  // bytes pub_key = 3;
  if (this->pub_key().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->pub_key(), output);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->nonce(), output);
  }

  // bytes result_hash = 5;
  if (this->result_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->result_hash(), output);
  }

  // bytes mixhash = 6;
  if (this->mixhash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      6, this->mixhash(), output);
  }

  // bytes signature = 7;
  if (this->signature().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      7, this->signature(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ProtoMsg.PoW1)
}

::google::protobuf::uint8* PoW1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMsg.PoW1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes block_number = 1;
  if (this->block_number().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->block_number(), target);
  }

  // uint32 listening_port = 2;
  if (this->listening_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->listening_port(), target);
  }

  // bytes pub_key = 3;
  if (this->pub_key().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->pub_key(), target);
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->nonce(), target);
  }

  // bytes result_hash = 5;
  if (this->result_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->result_hash(), target);
  }

  // bytes mixhash = 6;
  if (this->mixhash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        6, this->mixhash(), target);
  }

  // bytes signature = 7;
  if (this->signature().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        7, this->signature(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMsg.PoW1)
  return target;
}

size_t PoW1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMsg.PoW1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes block_number = 1;
  if (this->block_number().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->block_number());
  }

  // bytes pub_key = 3;
  if (this->pub_key().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->pub_key());
  }

  // bytes result_hash = 5;
  if (this->result_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->result_hash());
  }

  // bytes mixhash = 6;
  if (this->mixhash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->mixhash());
  }

  // bytes signature = 7;
  if (this->signature().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->signature());
  }

  // uint64 nonce = 4;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // uint32 listening_port = 2;
  if (this->listening_port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->listening_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PoW1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMsg.PoW1)
  GOOGLE_DCHECK_NE(&from, this);
  const PoW1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PoW1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMsg.PoW1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMsg.PoW1)
    MergeFrom(*source);
  }
}

void PoW1::MergeFrom(const PoW1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMsg.PoW1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.block_number().size() > 0) {

    block_number_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.block_number_);
  }
  if (from.pub_key().size() > 0) {

    pub_key_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pub_key_);
  }
  if (from.result_hash().size() > 0) {

    result_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.result_hash_);
  }
  if (from.mixhash().size() > 0) {

    mixhash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.mixhash_);
  }
  if (from.signature().size() > 0) {

    signature_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.signature_);
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.listening_port() != 0) {
    set_listening_port(from.listening_port());
  }
}

void PoW1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMsg.PoW1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PoW1::CopyFrom(const PoW1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMsg.PoW1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PoW1::IsInitialized() const {
  return true;
}

void PoW1::Swap(PoW1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PoW1::InternalSwap(PoW1* other) {
  using std::swap;
  block_number_.Swap(&other->block_number_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  pub_key_.Swap(&other->pub_key_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  result_hash_.Swap(&other->result_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  mixhash_.Swap(&other->mixhash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  signature_.Swap(&other->signature_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(nonce_, other->nonce_);
  swap(listening_port_, other->listening_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PoW1::GetMetadata() const {
  protobuf_PoW1_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_PoW1_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ProtoMsg::PoW1* Arena::CreateMaybeMessage< ::ProtoMsg::PoW1 >(Arena* arena) {
  return Arena::CreateInternal< ::ProtoMsg::PoW1 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
