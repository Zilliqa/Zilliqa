// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PoW1.proto

#ifndef PROTOBUF_INCLUDED_PoW1_2eproto
#define PROTOBUF_INCLUDED_PoW1_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_PoW1_2eproto 

namespace protobuf_PoW1_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_PoW1_2eproto
namespace ProtoMsg {
class PoW1;
class PoW1DefaultTypeInternal;
extern PoW1DefaultTypeInternal _PoW1_default_instance_;
}  // namespace ProtoMsg
namespace google {
namespace protobuf {
template<> ::ProtoMsg::PoW1* Arena::CreateMaybeMessage<::ProtoMsg::PoW1>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace ProtoMsg {

// ===================================================================

class PoW1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ProtoMsg.PoW1) */ {
 public:
  PoW1();
  virtual ~PoW1();

  PoW1(const PoW1& from);

  inline PoW1& operator=(const PoW1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PoW1(PoW1&& from) noexcept
    : PoW1() {
    *this = ::std::move(from);
  }

  inline PoW1& operator=(PoW1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PoW1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PoW1* internal_default_instance() {
    return reinterpret_cast<const PoW1*>(
               &_PoW1_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PoW1* other);
  friend void swap(PoW1& a, PoW1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PoW1* New() const final {
    return CreateMaybeMessage<PoW1>(NULL);
  }

  PoW1* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PoW1>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PoW1& from);
  void MergeFrom(const PoW1& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PoW1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes block_number = 1;
  void clear_block_number();
  static const int kBlockNumberFieldNumber = 1;
  const ::std::string& block_number() const;
  void set_block_number(const ::std::string& value);
  #if LANG_CXX11
  void set_block_number(::std::string&& value);
  #endif
  void set_block_number(const char* value);
  void set_block_number(const void* value, size_t size);
  ::std::string* mutable_block_number();
  ::std::string* release_block_number();
  void set_allocated_block_number(::std::string* block_number);

  // bytes pub_key = 3;
  void clear_pub_key();
  static const int kPubKeyFieldNumber = 3;
  const ::std::string& pub_key() const;
  void set_pub_key(const ::std::string& value);
  #if LANG_CXX11
  void set_pub_key(::std::string&& value);
  #endif
  void set_pub_key(const char* value);
  void set_pub_key(const void* value, size_t size);
  ::std::string* mutable_pub_key();
  ::std::string* release_pub_key();
  void set_allocated_pub_key(::std::string* pub_key);

  // bytes result_hash = 5;
  void clear_result_hash();
  static const int kResultHashFieldNumber = 5;
  const ::std::string& result_hash() const;
  void set_result_hash(const ::std::string& value);
  #if LANG_CXX11
  void set_result_hash(::std::string&& value);
  #endif
  void set_result_hash(const char* value);
  void set_result_hash(const void* value, size_t size);
  ::std::string* mutable_result_hash();
  ::std::string* release_result_hash();
  void set_allocated_result_hash(::std::string* result_hash);

  // bytes mixhash = 6;
  void clear_mixhash();
  static const int kMixhashFieldNumber = 6;
  const ::std::string& mixhash() const;
  void set_mixhash(const ::std::string& value);
  #if LANG_CXX11
  void set_mixhash(::std::string&& value);
  #endif
  void set_mixhash(const char* value);
  void set_mixhash(const void* value, size_t size);
  ::std::string* mutable_mixhash();
  ::std::string* release_mixhash();
  void set_allocated_mixhash(::std::string* mixhash);

  // bytes signature = 7;
  void clear_signature();
  static const int kSignatureFieldNumber = 7;
  const ::std::string& signature() const;
  void set_signature(const ::std::string& value);
  #if LANG_CXX11
  void set_signature(::std::string&& value);
  #endif
  void set_signature(const char* value);
  void set_signature(const void* value, size_t size);
  ::std::string* mutable_signature();
  ::std::string* release_signature();
  void set_allocated_signature(::std::string* signature);

  // uint64 nonce = 4;
  void clear_nonce();
  static const int kNonceFieldNumber = 4;
  ::google::protobuf::uint64 nonce() const;
  void set_nonce(::google::protobuf::uint64 value);

  // uint32 listening_port = 2;
  void clear_listening_port();
  static const int kListeningPortFieldNumber = 2;
  ::google::protobuf::uint32 listening_port() const;
  void set_listening_port(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:ProtoMsg.PoW1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr block_number_;
  ::google::protobuf::internal::ArenaStringPtr pub_key_;
  ::google::protobuf::internal::ArenaStringPtr result_hash_;
  ::google::protobuf::internal::ArenaStringPtr mixhash_;
  ::google::protobuf::internal::ArenaStringPtr signature_;
  ::google::protobuf::uint64 nonce_;
  ::google::protobuf::uint32 listening_port_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_PoW1_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PoW1

// bytes block_number = 1;
inline void PoW1::clear_block_number() {
  block_number_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoW1::block_number() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.block_number)
  return block_number_.GetNoArena();
}
inline void PoW1::set_block_number(const ::std::string& value) {
  
  block_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.block_number)
}
#if LANG_CXX11
inline void PoW1::set_block_number(::std::string&& value) {
  
  block_number_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.PoW1.block_number)
}
#endif
inline void PoW1::set_block_number(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  block_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.PoW1.block_number)
}
inline void PoW1::set_block_number(const void* value, size_t size) {
  
  block_number_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.PoW1.block_number)
}
inline ::std::string* PoW1::mutable_block_number() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.PoW1.block_number)
  return block_number_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoW1::release_block_number() {
  // @@protoc_insertion_point(field_release:ProtoMsg.PoW1.block_number)
  
  return block_number_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoW1::set_allocated_block_number(::std::string* block_number) {
  if (block_number != NULL) {
    
  } else {
    
  }
  block_number_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), block_number);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.PoW1.block_number)
}

// uint32 listening_port = 2;
inline void PoW1::clear_listening_port() {
  listening_port_ = 0u;
}
inline ::google::protobuf::uint32 PoW1::listening_port() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.listening_port)
  return listening_port_;
}
inline void PoW1::set_listening_port(::google::protobuf::uint32 value) {
  
  listening_port_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.listening_port)
}

// bytes pub_key = 3;
inline void PoW1::clear_pub_key() {
  pub_key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoW1::pub_key() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.pub_key)
  return pub_key_.GetNoArena();
}
inline void PoW1::set_pub_key(const ::std::string& value) {
  
  pub_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.pub_key)
}
#if LANG_CXX11
inline void PoW1::set_pub_key(::std::string&& value) {
  
  pub_key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.PoW1.pub_key)
}
#endif
inline void PoW1::set_pub_key(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  pub_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.PoW1.pub_key)
}
inline void PoW1::set_pub_key(const void* value, size_t size) {
  
  pub_key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.PoW1.pub_key)
}
inline ::std::string* PoW1::mutable_pub_key() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.PoW1.pub_key)
  return pub_key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoW1::release_pub_key() {
  // @@protoc_insertion_point(field_release:ProtoMsg.PoW1.pub_key)
  
  return pub_key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoW1::set_allocated_pub_key(::std::string* pub_key) {
  if (pub_key != NULL) {
    
  } else {
    
  }
  pub_key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pub_key);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.PoW1.pub_key)
}

// uint64 nonce = 4;
inline void PoW1::clear_nonce() {
  nonce_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PoW1::nonce() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.nonce)
  return nonce_;
}
inline void PoW1::set_nonce(::google::protobuf::uint64 value) {
  
  nonce_ = value;
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.nonce)
}

// bytes result_hash = 5;
inline void PoW1::clear_result_hash() {
  result_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoW1::result_hash() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.result_hash)
  return result_hash_.GetNoArena();
}
inline void PoW1::set_result_hash(const ::std::string& value) {
  
  result_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.result_hash)
}
#if LANG_CXX11
inline void PoW1::set_result_hash(::std::string&& value) {
  
  result_hash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.PoW1.result_hash)
}
#endif
inline void PoW1::set_result_hash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  result_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.PoW1.result_hash)
}
inline void PoW1::set_result_hash(const void* value, size_t size) {
  
  result_hash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.PoW1.result_hash)
}
inline ::std::string* PoW1::mutable_result_hash() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.PoW1.result_hash)
  return result_hash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoW1::release_result_hash() {
  // @@protoc_insertion_point(field_release:ProtoMsg.PoW1.result_hash)
  
  return result_hash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoW1::set_allocated_result_hash(::std::string* result_hash) {
  if (result_hash != NULL) {
    
  } else {
    
  }
  result_hash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), result_hash);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.PoW1.result_hash)
}

// bytes mixhash = 6;
inline void PoW1::clear_mixhash() {
  mixhash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoW1::mixhash() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.mixhash)
  return mixhash_.GetNoArena();
}
inline void PoW1::set_mixhash(const ::std::string& value) {
  
  mixhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.mixhash)
}
#if LANG_CXX11
inline void PoW1::set_mixhash(::std::string&& value) {
  
  mixhash_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.PoW1.mixhash)
}
#endif
inline void PoW1::set_mixhash(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mixhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.PoW1.mixhash)
}
inline void PoW1::set_mixhash(const void* value, size_t size) {
  
  mixhash_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.PoW1.mixhash)
}
inline ::std::string* PoW1::mutable_mixhash() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.PoW1.mixhash)
  return mixhash_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoW1::release_mixhash() {
  // @@protoc_insertion_point(field_release:ProtoMsg.PoW1.mixhash)
  
  return mixhash_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoW1::set_allocated_mixhash(::std::string* mixhash) {
  if (mixhash != NULL) {
    
  } else {
    
  }
  mixhash_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mixhash);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.PoW1.mixhash)
}

// bytes signature = 7;
inline void PoW1::clear_signature() {
  signature_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PoW1::signature() const {
  // @@protoc_insertion_point(field_get:ProtoMsg.PoW1.signature)
  return signature_.GetNoArena();
}
inline void PoW1::set_signature(const ::std::string& value) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ProtoMsg.PoW1.signature)
}
#if LANG_CXX11
inline void PoW1::set_signature(::std::string&& value) {
  
  signature_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:ProtoMsg.PoW1.signature)
}
#endif
inline void PoW1::set_signature(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ProtoMsg.PoW1.signature)
}
inline void PoW1::set_signature(const void* value, size_t size) {
  
  signature_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ProtoMsg.PoW1.signature)
}
inline ::std::string* PoW1::mutable_signature() {
  
  // @@protoc_insertion_point(field_mutable:ProtoMsg.PoW1.signature)
  return signature_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PoW1::release_signature() {
  // @@protoc_insertion_point(field_release:ProtoMsg.PoW1.signature)
  
  return signature_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PoW1::set_allocated_signature(::std::string* signature) {
  if (signature != NULL) {
    
  } else {
    
  }
  signature_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), signature);
  // @@protoc_insertion_point(field_set_allocated:ProtoMsg.PoW1.signature)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMsg

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_PoW1_2eproto
