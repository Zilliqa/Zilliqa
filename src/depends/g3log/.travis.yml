language: cpp

os:
  - linux

dist: trusty

compiler: 
     - gcc
    #- clang

# whitelist
branches:
  only:
    - master


before_install: 

   if [ ${TRAVIS_OS_NAME} = 'linux' ]; 
   then 


     sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test; 

     sudo add-apt-repository -y ppa:george-edison55/precise-backports;

     sudo apt-get remove -qq cmake cmake-data
     sudo apt-get autoremove -qq

     sudo apt-get update -qq;
     sudo apt-get install python-software-properties;
     sudo apt-get update;
     sudo apt-get install gcc-5 g++-5;
     sudo apt-get install software-properties-common;
     sudo apt-get update;
     sudo apt-get update -qq;
     sudo apt-get install cmake cmake-data;
   fi
 
install:
  #  gcc 5
  - if [ "$CXX" == "g++" ]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-5 10; fi
  - if [ "$CXX" == "g++" ]; then  sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-5 10; fi

  # clang 3.4
  - if [ "$CXX" == "clang++" ]; then sudo apt-get install --allow-unauthenticated -qq clang-3.4; fi
  - if [ "$CXX" == "clang++" ]; then sudo apt-get install libc++1 libc++abi-dev || true; fi

  - if [ "$CXX" == "clang++" ]; then export CXXFLAGS="-std=c++0x -stdlib=libc++"; fi
  - if [ "$CXX" == "clang++" ]; then svn co --quiet http://llvm.org/svn/llvm-project/libcxx/trunk libcxx; fi

  - if [ "$CXX" == "clang++" ]; then cd libcxx/lib && bash buildit; fi
  - if [ "$CXX" == "clang++" ]; then sudo cp ./libc++.so.1.0 /usr/lib/; fi
  - if [ "$CXX" == "clang++" ]; then sudo mkdir /usr/include/c++/v1; fi
  - if [ "$CXX" == "clang++" ]; then cd .. && sudo cp -r include/* /usr/include/c++/v1/; fi
  - if [ "$CXX" == "clang++" ]; then cd /usr/lib && sudo ln -sf libc++.so.1.0 libc++.so; fi
  - if [ "$CXX" == "clang++" ]; then sudo ln -sf libc++.so.1.0 libc++.so.1 && cd $cwd; fi
  # - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then  brew update;  fi
  - echo $PWD
  - echo $CXX
  - if [ "$CXX" == "clang++" ]; then cd build/KjellKod/g3log || true; fi
  - echo $PWD
 
script: "./scripts/buildAndRunTests.sh"


 
